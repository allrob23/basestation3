#!/usr/bin/tcsh
##
## Copyright (c) 2022, 2023 by University of Washington.  All rights reserved.
##
## This file contains proprietary information and remains the 
## unpublished property of the University of Washington. Use, disclosure,
## or reproduction is prohibited except as permitted by express written
## license agreement with the University of Washington.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
## POSSIBILITY OF SUCH DAMAGE.
##

if(! $?PYTHON_BINARY ) then
    set PYTHON_BINARY = /opt/basestation/bin/python
endif

# A glider just logged out properly
history -T -h >>! history.log
rm -f .connected
# if running manually (not at logout) set this variable
if ( ! $?logout ) then
    setenv logout manual
endif
echo Disconnected at `date -u +"%Y-%m-%dT%H:%M:%SZ"` \(${logout}\) >>! comm.log
printf "\n" >>! comm.log
printf "\n" >>! comm.log

set runner_timeout = 2

if(! $?GLIDER_OPTIONS ) then
    set GLIDER_OPTIONS = ""
endif

if(! $?BASESTATION_PATH ) then
    set BASESTATION_PATH = "/usr/local/basestation"
endif

printf "\n" >>! baselog.log
printf "\n"  >>! baselog.log

set base_logout_time = `date -u +%y%m%d%H%M%S`
set base_logout_cmd_line = "Base.py --mission_dir `pwd` --verbose --make_mission_timeseries --daemon --base_log `pwd`/baselog_`date -u +%y%m%d%H%M%S` ${GLIDER_OPTIONS}"
set base_logout_log = `pwd`/baselog.log

if( $?RUNNER_DIR ) then
  set base_logout_run_file = ${RUNNER_DIR}/${base_logout_time}.run
  echo `pwd` ${base_logout_log} ${base_logout_cmd_line} > ${base_logout_run_file}
  set t_now = `date +%s`
  while (-f ${base_logout_run_file} )
      sleep 0.2
      if ( `date +%s` >= ${t_now} + ${runner_timeout}) then
          break
      endif
  end
else
    $PYTHON_BINARY $BASESTATION_PATH/${base_logout_cmd_line}  >>&!  ${base_logout_log}
endif

